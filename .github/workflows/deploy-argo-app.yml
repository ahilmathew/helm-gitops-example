name: Deploy To AKS

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3


      - name: Dump github context
        run:   echo "$GITHUB_CONTEXT"
        shell: bash
        env:
         GITHUB_CONTEXT: ${{ toJson(github) }}


      - name: Generate manifests to apply
        if: github.ref != 'refs/heads/main'
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          cd $GITHUB_WORKSPACE/argocd-app

          echo $KUBE_CONFIG | base64 -d > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
          releaseName=$(echo ${{ github.event.pull_request.head.ref }} | sed -r 's/[/]+/-/g')
          helm template $releaseName-pr-deploy -f values.yaml . --output-dir ./generated --set isPr=true,repoUrl=${{ github.event.repository.html_url }},currentBranch=${{ github.event.pull_request.head.ref }},branchName=${{ github.event.pull_request.head.ref }}
          
          # helm template test -f values.yaml . --output-dir ./generated --set isPr=true,repoUrl=${{ github.event.repository.html_url }},currentBranch=${{ github.event.pull_request.head.ref }},branchName=${{ github.event.pull_request.head.ref }}
          cat ./generated/argocd-app/templates/*.yaml

      - name: Apply
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        with:
          args: apply -f ./argocd-app/generated/argocd-app/templates/